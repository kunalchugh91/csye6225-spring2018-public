  {
  "AWSTemplateFormatVersion": "2010-09-09",
  "Resources": {
    "DynamoDB": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "userid",
            "AttributeType": "S"
          },
          {
            "AttributeName": "expirationtime",
            "AttributeType": "N"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "userid",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "expirationtime",
            "KeyType": "RANGE"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": "5",
          "WriteCapacityUnits": "5"
        },
        "TableName": "csye6225",
        "TimeToLiveSpecification": {
          "AttributeName": "expirationtime",
          "Enabled": "true"
        }
      }
    },
    "DBSubnetGroup": {
      "Type": "AWS::RDS::DBSubnetGroup",
      "Properties": {
        "DBSubnetGroupDescription": "My Subnet Group",
        "SubnetIds": [
          {
            "Ref": "SUBNETID1"
          },
          {
            "Ref": "SUBNETID2"
          }
        ]
      }
    },
    "DBInstance": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "DBName": "cloud",
        "Engine": "mysql",
        "EngineVersion": "5.6.37",
        "MultiAZ": "false",
        "PubliclyAccessible": "false",
        "StorageType": "gp2",
        "MasterUsername": "root",
        "DBInstanceClass": "db.t2.medium",
        "DBInstanceIdentifier": "csye6225-spring2018",
        "AllocatedStorage": "10",
        "DBSubnetGroupName": {
          "Ref": "DBSubnetGroup"
        },
        "MasterUserPassword": "masteruserpassword",
        "VPCSecurityGroups": [{"Ref": "DBSGID"}]
      }
    },
    "EC2Instance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "ImageId": "ami-66506c1c",
        "InstanceType": "t2.micro",
        "DisableApiTermination": true,
        "AvailabilityZone": "us-east-1a",
        "SubnetId": {
          "Ref": "PUBLICSUBNETID"
        },
        "Volumes": [
          {
            "VolumeId": {
              "Ref": "NewVolume"
            },
            "Device": "/dev/sdk"
          }
        ],
        "KeyName": "CSYE6225",
        "SecurityGroupIds": [{"Ref": "SGID"}],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -xe \n",
                "sudo apt-get update \n",
                "sudo apt-get install openjdk-8-jdk -y\n",
                "sudo apt-get install ruby -y \n",
                "sudo apt-get install wget -y \n",
                "sudo apt-get install python -y \n",
                "sudo apt-get update \n",
                "sudo wget https://aws-codedeploy-us-east-1.s3.amazonaws.com/latest/install \n",
                "sudo chmod +x ./install \n",
                "sudo ./install auto \n",
                "sudo service codedeploy-agent start \n",
                "sudo apt-get install tomcat8 -y\n",
                "sudo service tomcat8 start\n",
                "echo '#!/bin/sh' >> /usr/share/tomcat8/bin/setenv.sh \n",
                {
                  "Fn::Sub": "echo 'JAVA_OPTS=\"$JAVA_OPTS -Dspring.profiles.active=aws\"' >> /usr/share/tomcat8/bin/setenv.sh\n"
                },
                {
                  "Fn::Sub": "echo 'JAVA_OPTS=\"$JAVA_OPTS -Dspring.datasource.url=jdbc:mysql://${DBInstance.Endpoint.Address}:3306/cloud\"' >> /usr/share/tomcat8/bin/setenv.sh\n"
                },
                {
                  "Fn::Sub": "echo 'JAVA_OPTS=\"$JAVA_OPTS -Dspring.datasource.username=${DBUser}\"' >> /usr/share/tomcat8/bin/setenv.sh\n"
                },
                {
                  "Fn::Sub": "echo 'JAVA_OPTS=\"$JAVA_OPTS -Dspring.datasource.password=${DBPassword}\"' >> /usr/share/tomcat8/bin/setenv.sh\n"
                },
                {
                  "Fn::Sub": "echo 'JAVA_OPTS=\"$JAVA_OPTS -Dbucket.name=${APPDOMAIN}\"' >> /usr/share/tomcat8/bin/setenv.sh\n"
                },
                {
                  "Fn::Sub": "echo 'JAVA_OPTS=\"$JAVA_OPTS -Ddomain.name=${DOMAIN}\"' >> /usr/share/tomcat8/bin/setenv.sh\n"
                },
                "chmod +x /usr/share/tomcat8/bin/setenv.sh\n",
                "chmod 777 -R /tmp\n",
                "chmod 777 /var/lib/tomcat8\n",
                "chmod 777 /var/lib/tomcat8/webapps\n",
                "sudo service tomcat8 restart ",
                "sudo apt-get update",
                "sudo touch /tmp/awslogs.conf",
                "sudo echo '[general]' > /tmp/awslogs.conf",
                "sudo echo 'state_file= /var/awslogs/agent-state' >> /tmp/awslogs.conf",
                "sudo echo '[logstream1]' >> /tmp/awslogs.conf",
                "sudo echo 'file = /var/log/tomcat8/csye6225-aws.log' >> /tmp/awslogs.conf",
                "sudo echo 'log_group_name = csye6225-webapp' >> /tmp/awslogs.conf",
                "sudo echo 'log_stream_name = csye6225-webapp' >> /tmp/awslogs.conf",
                "sudo echo 'datetime_format = %d/%b/%Y:%H:%M:%S' >> /tmp/awslogs.conf",
                "curl https://s3.amazonaws.com/aws-cloudwatch/downloads/latest/awslogs-agent-setup.py -O",
                {
                                    "Fn::Join": [
                                        " ",
                                        [
                                            "sudo python ./awslogs-agent-setup.py -n -r",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "-c /tmp/awslogs.conf || error_exit 'Failed to run CloudWatch Logs agent setup'"
                                        ]
                                    ]
                                },
                                "cd /etc/systemd/system",
                                "sudo touch awslogs.service",
                                "sudo echo '[Unit]' >> awslogs.service",
                                "sudo echo 'Description=Service for CloudWatch Logs agent' >> awslogs.service",
                                "sudo echo 'After=rc-local.service' >> awslogs.service",
                                "sudo echo '[Service]' >> awslogs.service",
                                "sudo echo 'Type=simple' >> awslogs.service",
                                "sudo echo 'Restart=always' >> awslogs.service",
                                "sudo echo 'KillMode=process' >> awslogs.service",
                                "sudo echo 'TimeoutSec=infinity' >> awslogs.service",
                                "sudo echo 'PIDFile=/var/awslogs/state/awslogs.pid' >> awslogs.service",
                                "sudo echo 'ExecStart=/var/awslogs/bin/awslogs-agent-launcher.sh --start --background --pidfile $PIDFILE --user awslogs --chuid awslogs &amp;' >> awslogs.service",
                                "sudo echo '[Install]' >> awslogs.service",
                                "sudo echo 'WantedBy=multi-user.target' >> awslogs.service",
                                "sudo systemctl start awslogs.service",
                                "sudo systemctl enable awslogs.service"
              ]
            ]
          }
        },
        "IamInstanceProfile":
        "CodeDeployServiceRoleInstanceProfile",
        "Tags": [
          {
            "Key": "Name",
            "Value": "MyEC2Instance"
          }
        ]
      }
    },
    "NewVolume": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1a",
        "Size": 16,
        "VolumeType": "gp2"
      }
    },
    "myBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": {
          "Ref": "APPDOMAIN"
        }
      }
    },
    "SNSTopic": {
      "Type" : "AWS::SNS::Topic",
      "Properties" : {
        "DisplayName" : "MySNSTopic",
        "TopicName" : "PasswordResetSNSTopic"
      }
    }
  },
  "Parameters": {
    "PUBLICSUBNETID":{
      "Type": "String"
    },
    "SGID": {
      "Type": "String"
    },
    "DBSGID": {
      "Type": "String"
    },
    "DBUser": {
      "Type": "String"
    },
    "DBPassword": {
      "Type": "String"
    },
    "SUBNETID1": {
      "Description": "The subnet id",
      "Type": "String"
    },
    "SUBNETID2": {
      "Description": "The subnet id",
      "Type": "String"
    },
    "APPDOMAIN": {
      "Description": "The web app domain name",
      "Type": "String"
    },
    "DOMAIN": {
      "Description": "The domain name",
      "Type": "String"
    }
  }
}
